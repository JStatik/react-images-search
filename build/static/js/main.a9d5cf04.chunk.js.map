{"version":3,"sources":["hooks/useFetch.js","components/Error.js","components/Image/BodyCard.js","components/Image/FooterCard.js","components/Image/ImageCard.js","components/Image.js","hooks/useForm.js","helpers/isValidImageForm.js","components/ImageForm/ImagesInput.js","components/ImageForm/SubmitButton.js","components/ImagesForm.js","components/Loading.js","components/Pagination/Button.js","components/Pagination/NextButton.js","components/Pagination/PrevButton.js","components/Pagination.js","components/TitleApp.js","ImagesSearch.js","index.js"],"names":["useFetch","containerMain","query","currentPage","isMountedRef","useRef","useState","data","totalPages","loading","error","state","setState","useEffect","current","a","limitResults","url","encodeURI","fetch","request","json","response","hits","length","Math","ceil","totalHits","scrollIntoView","behavior","getImages","Error","className","BodyCard","likes","views","FooterCard","image","href","target","rel","ImageCard","name","src","alt","height","Image","largeImageURL","tags","useForm","initialState","formValues","setFormValues","handleInputChange","event","value","reset","newState","isValidImagesForm","images","trim","validator","isEmpty","isAlpha","ignore","errorImages","isValid","ImagesInput","type","placeholder","onChange","SubmitButton","React","memo","disabled","ImagesForm","setQuery","setCurrentPage","setError","setDisabled","autoComplete","onSubmit","preventDefault","escapedImages","escape","Loading","Button","numberButton","onClick","NextButton","aria-hidden","PrevButton","Pagination","minButtonPagination","maxButtonPagination","buttonsPagination","setButtonsPagination","i","map","button","TitleApp","ImagesSearch","ref","id","ReactDOM","render","document","getElementById"],"mappings":"gNAuDeA,EArDE,SAAEC,EAAeC,EAAOC,GACrC,IAAMC,EAAeC,kBAAQ,GADyB,EAE1BC,mBAAU,CAAEC,KAAM,GAAIC,WAAY,EAAGC,SAAS,EAAMC,MAAO,OAFjC,mBAE9CC,EAF8C,KAEvCC,EAFuC,KAkDtD,OA9CAC,qBAAW,WACP,OAAO,WACHT,EAAaU,SAAU,KAE5B,IAEHD,qBAAW,WACPD,EAAU,CAAEL,KAAM,GAAIC,WAAY,EAAGC,SAAS,EAAMC,MAAO,OAE5C,uCAAG,kCAAAK,EAAA,sEAEJC,EAAe,GACfC,EAHI,4EAGwEC,UAAWhB,GAHnF,qBAGyGc,EAHzG,iBAGgIb,GAHhI,SAKYgB,MAAOF,GALnB,cAKJG,EALI,gBAMaA,EAAQC,OANrB,QAMJC,EANI,QAQGC,KAAKC,OAAS,EACvBpB,EAAaU,SAEbF,EAAU,CACNL,KAAMe,EAASC,KACff,WAAYiB,KAAKC,KAAMJ,EAASK,UAAYX,GAC5CP,SAAS,EACTC,MAAO,OAGXN,EAAaU,SAEbF,EAAU,CACNL,KAAM,GACNC,WAAY,EACZC,SAAS,EACTC,MAAO,sDAIfT,EAAc2B,eAAgB,CAAEC,SAAU,WA5BhC,kDA8BVjB,EAAU,CAAEL,KAAM,GAAIC,WAAY,EAAGC,SAAS,EAAOC,MAAM,EAAD,KA9BhD,0DAAH,oDAkCfoB,KACD,CAAE7B,EAAeC,EAAOC,IAEpBQ,G,OCnCIoB,EAdD,SAAC,GAAiB,IAAdrB,EAAa,EAAbA,MACd,OACI,qBAAKsB,UAAU,kBAAf,SACI,4BACMtB,OCeHuB,EAnBE,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,MACxB,OACI,sBAAKH,UAAU,gBAAf,UACI,qBAAKA,UAAU,0CAAf,SACI,iCAAM,mBAAGA,UAAU,qBAAnB,IAA6CE,OAGjD,qBAAKF,UAAU,wBAAf,SACI,iCAAM,mBAAGA,UAAU,eAAnB,IAAuCG,WCUxCC,EAlBI,SAAC,GAAiB,IAAdC,EAAa,EAAbA,MACnB,OACI,qBAAKL,UAAU,0BAAf,SACI,mBACIM,KAAOD,EACPE,OAAO,SACPC,IAAI,aAHR,2BCaGC,EAhBG,SAAC,GAAuB,IAApBJ,EAAmB,EAAnBA,MAAOK,EAAY,EAAZA,KACzB,OACI,qBACIC,IAAMN,EACNO,IAAMF,EACNV,UAAU,eACVa,OAAO,SCyBJC,EA5BD,SAAC,GAAiB,IAAdT,EAAa,EAAbA,MACNU,EAAsCV,EAAtCU,cAAeb,EAAuBG,EAAvBH,MAAOc,EAAgBX,EAAhBW,KAAMb,EAAUE,EAAVF,MAEpC,OACI,qBAAKH,UAAU,iCAAf,SACI,sBAAKA,UAAU,OAAf,UACI,cAAC,EAAD,CACIK,MAAQU,EACRL,KAAOM,IAGX,cAAC,EAAD,CACId,MAAQA,EACRC,MAAQA,IAGZ,cAAC,EAAD,CACIE,MAAQU,U,gCCJbE,EAjBC,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EACC5C,mBAAU4C,GADX,mBAC7BC,EAD6B,KACjBC,EADiB,KAG/BC,EAAoB,SAAEC,GACxBF,EAAc,2BACPD,GADM,kBAEPG,EAAMf,OAAOG,KAAQY,EAAMf,OAAOgB,UAItCC,EAAQ,WAAgC,IAA9BC,EAA6B,uDAAlBP,EACvBE,EAAeK,IAGnB,MAAO,CAAEN,EAAYE,EAAmBG,ICA7BE,EAdW,SAAEC,GACxB,OAAIA,EAAOC,OAAOpC,OAAS,GAAKqC,IAAUC,QAASH,KAAaE,IAAUE,QAASJ,EAAQ,CAAE,SAAW,CAAEK,OAAQ,MACvG,CACHC,YAAa,oDACbC,SAAS,GAIV,CACHD,YAAa,KACbC,SAAS,ICaFC,EAtBK,SAAC,GAA4C,IAAzCR,EAAwC,EAAxCA,OAAQN,EAAgC,EAAhCA,kBAAmB3C,EAAa,EAAbA,MAC/C,OACI,sBAAKsB,UAAU,kCAAf,UACI,uBACIoC,KAAK,OACLpC,UAAS,uBAAoBtB,GAAS,cACtC2D,YAAY,wBACZ3B,KAAK,SACLa,MAAQI,EACRW,SAAWjB,IAEf,qBAAKrB,UAAU,mBAAf,SAAoCtB,QCOjC6D,EAlBMC,IAAMC,MAAM,YAAqB,IAAjBC,EAAgB,EAAhBA,SACjC,OACI,qBAAK1C,UAAU,sBAAf,SACI,wBACIoC,KAAK,SACLpC,UAAU,4BACV0C,SAAWA,EAHf,yBC+CGC,EA7CI,SAAC,GAAoC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,eAAsB,EACF5B,EAAS,CAAEU,OAAQ,KADjB,mBAC3CR,EAD2C,KAC/BE,EAD+B,KACZG,EADY,KAE3CG,EAAWR,EAAXQ,OAF2C,EAIvBrD,mBAAU,MAJa,mBAI3CI,EAJ2C,KAIpCoE,EAJoC,OAKjBxE,oBAAU,GALO,mBAK3CoE,EAL2C,KAKjCK,EALiC,KAyBnD,OACI,sBAAMC,aAAa,MAAMC,SAnBR,SAAE3B,GACnBA,EAAM4B,iBACNH,GAAa,GAEb,IAAMI,EAAgBtB,IAAUuB,OAAQzB,GAJV,EAMGD,EAAmByB,GAA5ClB,EANsB,EAMtBA,YAAaC,EANS,EAMTA,QACrBY,EAAUb,GAENC,IACAU,EAAUO,GACVN,EAAgB,GAChBrB,KAGJuB,GAAa,IAIb,SACI,sBAAK/C,UAAU,MAAf,UACI,cAAC,EAAD,CACI2B,OAASA,EACTN,kBAAoBA,EACpB3C,MAASA,GAAQ,KAGrB,cAAC,EAAD,CAAcgE,SAAWA,UC1B1BW,EAdC,WACZ,OACI,qBAAKrD,UAAU,oBAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,gB,QCahBsD,EApBA,SAAC,GAAqD,IAAlDC,EAAiD,EAAjDA,aAAcpF,EAAmC,EAAnCA,YAAa0E,EAAsB,EAAtBA,eAC1C,OACI,oBAAI7C,UAAS,oBAAiB7B,IAAgBoF,GAAgB,UAA9D,SACI,wBACInB,KAAK,SACLpC,UAAU,YACVwD,QAAU,kBAAMX,EAAgBU,IAHpC,SAKMA,OCYHE,EApBI,SAAC,GAAmD,IAAhDjF,EAA+C,EAA/CA,WAAYL,EAAmC,EAAnCA,YAAa0E,EAAsB,EAAtBA,eAC5C,OACI,oBAAI7C,UAAS,oBAAiB7B,IAAgBK,GAAc,YAA5D,SACI,wBACI4D,KAAK,SACLpC,UAAU,YACVwD,QAAU,kBAAMX,EAAgB1E,EAAc,IAHlD,SAKI,sBAAMuF,cAAY,OAAlB,uBCWDC,EAnBI,SAAC,GAAuC,IAApCxF,EAAmC,EAAnCA,YAAa0E,EAAsB,EAAtBA,eAChC,OACI,oBAAI7C,UAAS,oBAAiC,IAAhB7B,GAAqB,YAAnD,SACI,wBACIiE,KAAK,SACLpC,UAAU,YACVwD,QAAU,kBAAMX,EAAgB1E,EAAc,IAHlD,SAKI,sBAAMuF,cAAY,OAAlB,uBC2DDE,EAhEI,SAAC,GAAmD,IAAhDpF,EAA+C,EAA/CA,WAAYL,EAAmC,EAAnCA,YAAa0E,EAAsB,EAAtBA,eAAsB,EACjCvE,oBAAU,WACvC,OAAIE,EAAa,GAAKL,EAAc,EAAI,EAC7B,EACAA,EAAc,EAAIK,EAClBA,EAAa,EAEbL,EAAc,KANrB0F,EAD0D,sBAWjCvF,oBAAU,WACvC,OAAIE,EAAa,GAAKL,EAAc,EAAIK,EAC7BA,EACAL,EAAc,EAAI,EAClB,EAEAA,EAAc,KANrB2F,EAX0D,sBAqBdxF,mBAAU,IArBI,mBAqB1DyF,EArB0D,KAqBvCC,EArBuC,KA6BlE,OANAnF,qBAAW,WACP,IADc,IAAD,WACJoF,GACLD,GAAsB,SAAAD,GAAiB,4BAASA,GAAT,CAA4BE,QAD9DA,EAAIJ,EAAqBI,GAAKH,EAAqBG,IAAO,EAA1DA,KAGV,CAAEJ,EAAqBC,IAGtB,qBAAK9D,UAAU,OAAf,SACI,qBAAIA,UAAU,aAAd,UACI,cAAC,EAAD,CACI7B,YAAcA,EACd0E,eAAiBA,IAIjBkB,EAAkBG,KAAK,SAAEC,GAAF,OACnB,cAAC,EAAD,CAEIZ,aAAeY,EACfhG,YAAcA,EACd0E,eAAiBA,GAHXsB,MAQlB,cAAC,EAAD,CACI3F,WAAaA,EACbL,YAAcA,EACd0E,eAAiBA,UC/CtBuB,EARE5B,IAAMC,MAAM,WACzB,OACI,mBAAGzC,UAAU,mBAAb,wCCwDOqE,EAnDM,WACjB,IAAMpG,EAAgBI,mBADC,EAEKC,mBAAU,YAFf,mBAEfJ,EAFe,KAER0E,EAFQ,OAGiBtE,mBAAU,GAH3B,mBAGfH,EAHe,KAGF0E,EAHE,OAI8B7E,EAAUC,EAAca,QAASZ,EAAOC,GAA/EwD,EAJS,EAIfpD,KAAcC,EAJC,EAIDA,WAAYC,EAJX,EAIWA,QAASC,EAJpB,EAIoBA,MAE3C,OACI,sBAAKsB,UAAU,YAAf,UACI,sBAAKA,UAAU,+BAA+BsE,IAAMrG,EAApD,UACI,cAAC,EAAD,IAEA,cAAC,EAAD,CACI2E,SAAWA,EACXC,eAAiBA,OAKrBpE,EAEQ,cAAC,EAAD,IAEAC,EAEQ,cAAC,EAAD,CAAOA,MAAM,sDAEb,qCACI,qBAAKsB,UAAU,6BAAf,SAEQ2B,EAAOuC,KAAK,SAAA7D,GAAK,OACb,cAAC,EAAD,CAEIA,MAAQA,GADFA,EAAMkE,SAO5B,qBAAKvE,UAAU,6BAAf,SACI,cAAC,EAAD,CACIxB,WAAaA,EACbL,YAAcA,EACd0E,eAAiBA,aC7C7D2B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAgB,U","file":"static/js/main.a9d5cf04.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n\r\nconst useFetch = ( containerMain, query, currentPage ) => {\r\n    const isMountedRef = useRef( true );\r\n    const [ state, setState ] = useState( { data: [], totalPages: 1, loading: true, error: null } );\r\n\r\n    useEffect( () => {\r\n        return () => {\r\n            isMountedRef.current = false;\r\n        }\r\n    }, [] )\r\n\r\n    useEffect( () => {\r\n        setState( { data: [], totalPages: 1, loading: true, error: null } );\r\n\r\n        const getImages = async() => {\r\n            try {\r\n                const limitResults = 12;\r\n                const url = `https://pixabay.com/api/?key=12407256-74c23a8e7869156a9f8ac0334&q=${ encodeURI( query ) }&per_page=${ limitResults }&page=${ currentPage }`;\r\n\r\n                const request = await fetch( url );\r\n                const response = await request.json();\r\n\r\n                if( response.hits.length > 0 ) {\r\n                    isMountedRef.current\r\n                        &&\r\n                    setState( {\r\n                        data: response.hits,\r\n                        totalPages: Math.ceil( response.totalHits / limitResults ),\r\n                        loading: false,\r\n                        error: null\r\n                    } );\r\n                } else {\r\n                    isMountedRef.current\r\n                        &&\r\n                    setState( {\r\n                        data: [],\r\n                        totalPages: 1,\r\n                        loading: false,\r\n                        error: 'No se encontraron resultados, intente nuevamente.'\r\n                    } );\r\n                }\r\n\r\n                containerMain.scrollIntoView( { behavior: 'smooth' } );\r\n            } catch ( err ) {\r\n                setState( { data: [], totalPages: 1, loading: false, error: err } );\r\n            }\r\n        };\r\n\r\n        getImages();\r\n    }, [ containerMain, query, currentPage ] );\r\n\r\n    return state;\r\n};\r\n\r\nexport default useFetch;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ( { error } ) => {\r\n    return (\r\n        <div className=\"container-error\">\r\n            <p>\r\n                { error }\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    error: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BodyCard = ( { likes, views } ) => {\r\n    return (\r\n        <div className=\"row card-body\">\r\n            <div className=\"col-6 text-center p-0 border-right-card\">\r\n                <span><i className=\"fas fa-thumbs-up\"></i> { likes }</span>\r\n            </div>\r\n\r\n            <div className=\"col-6 text-center p-0\">\r\n                <span><i className=\"fas fa-eye\"></i> { views }</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nBodyCard.propTypes = {\r\n    likes: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired\r\n};\r\n\r\nexport default BodyCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FooterCard = ( { image } ) => {\r\n    return (\r\n        <div className=\"card-footer text-center\">\r\n            <a\r\n                href={ image }\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n            >\r\n                Ver imagen\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nFooterCard.propTypes = {\r\n    image: PropTypes.string.isRequired\r\n};\r\n\r\nexport default FooterCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageCard = ( { image, name } ) => {\r\n    return (\r\n        <img\r\n            src={ image }\r\n            alt={ name }\r\n            className=\"card-img-top\"\r\n            height=\"150\"\r\n        />\r\n    );\r\n};\r\n\r\nImageCard.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ImageCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport BodyCard from './Image/BodyCard';\r\nimport FooterCard from './Image/FooterCard';\r\nimport ImageCard from './Image/ImageCard';\r\n\r\nconst Image = ( { image } ) => {\r\n    const { largeImageURL, likes, tags, views } = image;\r\n\r\n    return (\r\n        <div className=\"col-sm-6 col-md-4 col-lg-3 p-3\">\r\n            <div className=\"card\">\r\n                <ImageCard\r\n                    image={ largeImageURL }\r\n                    name={ tags }\r\n                />\r\n\r\n                <BodyCard\r\n                    likes={ likes }\r\n                    views={ views }\r\n                />\r\n\r\n                <FooterCard\r\n                    image={ largeImageURL }\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nImage.propTypes = {\r\n    image: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Image;\r\n","import { useState } from 'react';\r\n\r\nconst useForm = ( initialState = {} ) => {\r\n    const [ formValues, setFormValues ] = useState( initialState );\r\n\r\n    const handleInputChange = ( event ) => {\r\n        setFormValues( {\r\n            ...formValues,\r\n            [ event.target.name ]: event.target.value\r\n        } );\r\n    };\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setFormValues( newState );\r\n    };\r\n\r\n    return [ formValues, handleInputChange, reset ];\r\n};\r\n\r\nexport default useForm;\r\n","import validator from 'validator';\r\n\r\nconst isValidImagesForm = ( images ) => {\r\n    if( images.trim().length < 2 || validator.isEmpty( images ) || !validator.isAlpha( images, [ 'es-ES' ], { ignore: ' ' } ) ) {\r\n        return {\r\n            errorImages: 'Ingrese una imagen válida para su búsqueda.',\r\n            isValid: false\r\n        };\r\n    }\r\n\r\n    return {\r\n        errorImages: null,\r\n        isValid: true\r\n    };\r\n};\r\n\r\nexport default isValidImagesForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImagesInput = ( { images, handleInputChange, error } ) => {\r\n    return (\r\n        <div className=\"form-group col-md-7 offset-md-1\">\r\n            <input\r\n                type=\"text\"\r\n                className={ `form-control ${ error && 'is-invalid' }` }\r\n                placeholder=\"Buscar imágenes...\"\r\n                name=\"images\"\r\n                value={ images }\r\n                onChange={ handleInputChange }\r\n            />\r\n            <div className=\"invalid-feedback\">{ error }</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nImagesInput.propTypes = {\r\n    images: PropTypes.string.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ImagesInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SubmitButton = React.memo( ( { disabled } ) => {\r\n    return (\r\n        <div className=\"form-group col-md-3\">\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={ disabled }\r\n            >\r\n                Buscar\r\n            </button>\r\n        </div>\r\n    );\r\n} );\r\n\r\nSubmitButton.propTypes = {\r\n    disabled: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validator from 'validator';\r\nimport useForm from '../hooks/useForm';\r\nimport isValidImagesForm from '../helpers/isValidImageForm';\r\nimport ImagesInput from './ImageForm/ImagesInput';\r\nimport SubmitButton from './ImageForm/SubmitButton';\r\n\r\nconst ImagesForm = ( { setQuery, setCurrentPage } ) => {\r\n    const [ formValues, handleInputChange, reset ] = useForm( { images: '' } );\r\n    const { images } = formValues;\r\n\r\n    const [ error, setError ] = useState( null );\r\n    const [ disabled, setDisabled ] = useState( false );\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n        setDisabled( true );\r\n\r\n        const escapedImages = validator.escape( images );\r\n\r\n        const { errorImages, isValid } = isValidImagesForm( escapedImages );\r\n        setError( errorImages );\r\n\r\n        if( isValid ) {\r\n            setQuery( escapedImages );\r\n            setCurrentPage( 1 );\r\n            reset();\r\n        }\r\n\r\n        setDisabled( false );\r\n    };\r\n\r\n    return (\r\n        <form autoComplete=\"off\" onSubmit={ handleSubmit }>\r\n            <div className=\"row\">\r\n                <ImagesInput\r\n                    images={ images }\r\n                    handleInputChange={ handleInputChange }\r\n                    error={ !error ? '' : error }\r\n                />\r\n\r\n                <SubmitButton disabled={ disabled } />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nImagesForm.propTypes = {\r\n    setQuery: PropTypes.func.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ImagesForm;\r\n","import React from 'react';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"container-spinner\">\r\n            <div className=\"spinner\">\r\n                <div className=\"rect1\"></div>\r\n                <div className=\"rect2\"></div>\r\n                <div className=\"rect3\"></div>\r\n                <div className=\"rect4\"></div>\r\n                <div className=\"rect5\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ( { numberButton, currentPage, setCurrentPage } ) => {\r\n    return (\r\n        <li className={ `page-item ${ currentPage === numberButton && 'active' }` }>\r\n            <button\r\n                type=\"button\"\r\n                className=\"page-link\"\r\n                onClick={ () => setCurrentPage( numberButton ) }\r\n            >\r\n                { numberButton }\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    numberButton: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NextButton = ( { totalPages, currentPage, setCurrentPage } ) => {\r\n    return (\r\n        <li className={ `page-item ${ currentPage === totalPages && 'disabled' }` }>\r\n            <button\r\n                type=\"button\"\r\n                className=\"page-link\"\r\n                onClick={ () => setCurrentPage( currentPage + 1 ) }\r\n            >\r\n                <span aria-hidden=\"true\">&raquo;</span>\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nNextButton.propTypes = {\r\n    totalPages: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default NextButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PrevButton = ( { currentPage, setCurrentPage } ) => {\r\n    return (\r\n        <li className={ `page-item ${ currentPage === 1 && 'disabled' }` }>\r\n            <button\r\n                type=\"button\"\r\n                className=\"page-link\"\r\n                onClick={ () => setCurrentPage( currentPage - 1 ) }\r\n            >\r\n                <span aria-hidden=\"true\">&laquo;</span>\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nPrevButton.propTypes = {\r\n    currentPage: PropTypes.number.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default PrevButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Pagination/Button';\r\nimport NextButton from './Pagination/NextButton';\r\nimport PrevButton from './Pagination/PrevButton';\r\n\r\nconst Pagination = ( { totalPages, currentPage, setCurrentPage } ) => {\r\n    const [ minButtonPagination, ] = useState( () => {\r\n        if( totalPages < 5 || currentPage - 2 < 1 ) {\r\n            return 1;\r\n        } else if( currentPage + 4 > totalPages ) {\r\n            return totalPages - 4;\r\n        } else {\r\n            return currentPage - 2;\r\n        }\r\n    } );\r\n\r\n    const [ maxButtonPagination, ] = useState( () => {\r\n        if( totalPages < 5 || currentPage + 4 > totalPages ) {\r\n            return totalPages;\r\n        } else if( currentPage + 2 < 5 ) {\r\n            return 5;\r\n        } else {\r\n            return currentPage + 2;\r\n        }\r\n    } );\r\n\r\n    const [ buttonsPagination, setButtonsPagination ] = useState( [] );\r\n\r\n    useEffect( () => {\r\n        for( let i = minButtonPagination; i <= maxButtonPagination; i++ ) {\r\n            setButtonsPagination( buttonsPagination => [ ...buttonsPagination, i ] );\r\n        }\r\n    }, [ minButtonPagination, maxButtonPagination ] );\r\n\r\n    return (\r\n        <nav className=\"mt-3\">\r\n            <ul className=\"pagination\">\r\n                <PrevButton\r\n                    currentPage={ currentPage }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n\r\n                {\r\n                    buttonsPagination.map( ( button ) => (\r\n                        <Button\r\n                            key={ button }\r\n                            numberButton={ button }\r\n                            currentPage={ currentPage }\r\n                            setCurrentPage={ setCurrentPage }\r\n                        />\r\n                    ) )\r\n                }\r\n                \r\n                <NextButton\r\n                    totalPages={ totalPages }\r\n                    currentPage={ currentPage }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nPagination.propTypes = {\r\n    totalPages: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    setCurrentPage: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nconst TitleApp = React.memo( () => {\r\n    return (\r\n        <p className=\"lead text-center\">\r\n            BUSCADOR DE IMÁGENES\r\n        </p>\r\n    );\r\n} );\r\n\r\nexport default TitleApp;\r\n","import React, { useRef, useState } from 'react';\r\nimport useFetch from './hooks/useFetch';\r\nimport Error from './components/Error';\r\nimport Image from './components/Image';\r\nimport ImagesForm from './components/ImagesForm';\r\nimport Loading from './components/Loading';\r\nimport Pagination from './components/Pagination';\r\nimport TitleApp from './components/TitleApp';\r\n\r\nconst ImagesSearch = () => {\r\n    const containerMain = useRef();\r\n    const [ query, setQuery ] = useState( 'Colombia' );\r\n    const [ currentPage, setCurrentPage ] = useState( 1 );\r\n    const { data: images, totalPages, loading, error } = useFetch( containerMain.current, query, currentPage );\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mt-3 p-3 bg-secondary shadow\" ref={ containerMain }>\r\n                <TitleApp />\r\n\r\n                <ImagesForm\r\n                    setQuery={ setQuery }\r\n                    setCurrentPage={ setCurrentPage }\r\n                />\r\n            </div>\r\n\r\n            {\r\n                loading\r\n                    ?\r\n                        <Loading />\r\n                    :\r\n                        error\r\n                            ?\r\n                                <Error error=\"No se encontraron resultados, intente nuevamente.\" />\r\n                            :\r\n                                <>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        {\r\n                                            images.map( image => (\r\n                                                <Image\r\n                                                    key={ image.id }\r\n                                                    image={ image }\r\n                                                />\r\n                                            ) )\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <Pagination\r\n                                            totalPages={ totalPages }\r\n                                            currentPage={ currentPage }\r\n                                            setCurrentPage={ setCurrentPage }\r\n                                        />\r\n                                    </div>\r\n                                </>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImagesSearch;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootswatch/dist/simplex/bootstrap.min.css';\r\nimport './index.css';\r\nimport ImagesSearch from './ImagesSearch';\r\n\r\nReactDOM.render( <ImagesSearch />, document.getElementById( 'root' ) );\r\n"],"sourceRoot":""}